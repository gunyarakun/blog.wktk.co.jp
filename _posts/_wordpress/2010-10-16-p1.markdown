---
date: 2010-10-16 04:06:05
lang: ja
layout: post
tags: [技術メモ, Python]
title: PythonでOpenCV 2.0以降の新しいインターフェースを使い顔認識を行う
wordpress_id: 54
---
Python経由でOpenCVの顔認識を行う実例が、<a href="http://yamashita.dyndns.org/blog/face-detection-with-opencv/">OpenCVを使った顔認識を試してみる</a>というエントリにあります。

上記のスクリプトは、このエントリを書いた当時のバージョンであるOpenCV 2.1とそれに附属するPythonバインディングで動作します。

しかし、<a href="http://opencv.jp/opencv-2.1/py/">version 2.1のPythonバインディングリファレンス</a>によると、上記エントリで使っている関数群の説明が見当たりません。どうやら、version 2.0から、古いSWIGベースのPythonバインディングに加え、新しい形式のバインディングが追加されているようです。
<ul>
	<li>基本的には、import cvでほとんど事足りるようになっている。highguiも統合されたようだ。opencv.cv.cvFuncName()や、opencv.highgui.cvFuncname()は、cv.FuncName()となる。各種定数もすべてcv直下で参照できるようだ。</li>
	<li>cvRect/cvPoint/cvSize/cvScalarなどの代わりに、単なるtupleを使うようになっている。</li>
	<li>SWIGを用いた旧バインディングも、version 2.1現在では利用できる。</li>
</ul>
「旧バインディングが使えるのであれば、そのままでいいじゃーん」と思いました。しかし、cvSetImageROIに対応する関数呼び出しは、どうやら新形式でないとサポートされていないようです。

というわけで、上記エントリのコードを新形式に移植してみました。これから新規でPython + OpenCVのスクリプトを書く場合は、新形式を使うのがよいでしょう。
<pre class="syntax escaped brush-python">
#!/usr/bin/env python
# -*- coding: utf-8 -*-
import cv
import sys

def faceDetect(imgfile):
  # 画像を読み込む
  src_img = cv.LoadImage(imgfile, cv.CV_LOAD_IMAGE_COLOR)
  src_gray = cv.CreateImage(cv.GetSize(src_img),
                            cv.IPL_DEPTH_8U, 1)

  # ブーストされた分類器のカスケードを読み込む
  cascade_name = "haarcascade_frontalface_default.xml"
  cascade = cv.Load(cascade_name)

  # メモリを確保し，読み込んだ画像のグレースケール化，ヒストグラムの均一化を行う
  storage = cv.CreateMemStorage()
  cv.CvtColor(src_img, src_gray, cv.CV_BGR2GRAY)
  cv.EqualizeHist(src_gray, src_gray)

  # 顔検出
  faces = cv.HaarDetectObjects(src_gray, cascade, storage,
                               1.11, 4, 0, (40, 40))

  # 検出された全ての顔位置に枠を描画する
  for c, face_tuple in enumerate(faces):
    face_x, face_y, face_width, face_height = face_tuple[0]
    cv.Rectangle(
      src_img,
      (face_x, face_y),
      (face_x + face_width, face_y + face_height),
      cv.CV_RGB(255, 0, 0),
      3, 8, 0
    )

  return src_img

if __name__ == '__main__':
  if len(sys.argv) < 2:
    print "Usage: facedetect \n" ;
    sys.exit(-1)
  img = faceDetect(sys.argv[1])

  # 画像を出力
  cv.SaveImage("output.jpg", img)
</pre>
